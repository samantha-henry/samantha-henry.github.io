?hist
hist(rnorm(n = 100, mean = 5))
# data.frames ----
id <- 1:200
group <- C(rep("Vehicle", 100), rep("Drug", 100))
group <- C(rep("Vehicle", 100), rep("Drug", 100))
group <- c(rep("Vehicle", 100), rep("Drug", 100))
group <- c(rep("Vehicle", 100), rep("Drug", 100))
group
response <- c(rnorm(100, mean = 25, sd = 5))
response <- c(rnorm(100, mean = 25, sd = 5),
rnorm(100, mean = 23, sd = 5))
response
myData <- data.frame(Patient = id,)
myData <- data.frame(Patient = id,
Treatment = group
Response = response)
myData <- data.frame(Patient = id,
Treatment = group,
Response = response)
myData <- data.frame(Patient = id,
Treatment = group,
Response = response)
myData
head(myData)
head(myData, 10)
tail(myData)
tail(myData, 2)
dim(myData)
str(myData)
summary(myData)
as.numeric(c("1", "2", "3"))
as.character(c(1:10))
# subsetting data.frames ----
myData[1,2]
myData[2,3]
myData[1:20, 2:3]
myData[1:20, ]
myData[, 1]
myData[, "Response"]
myData$Response
myData[myData$Response > 26,]
myData$Positive <- myData$Response > 26
myData
myData[myData$Treatment == "Vehicle" & myData$Response <= 23,]
myData[myData$Treatment == "Vehicle" | myData$Response <= 23,]
myData[myData$Treatment != "Vehicle" | myData$Response <= 23,]
rnorm(200, 40, 20)
age <- round(rnorm(200, 40, 20))
round(rnorm(200, 40, 20)
round(rnorm(200, 40, 20))
round(rnorm(200, 40, 20))
myData$Age <- age
head(myData)
# reading data into r ----
pokemon <- read.csv("Pokemon.csv")
getwd()
swirl
swirl()
library("swirl")
library("swirl")
swirl()
bye()
library("swirl")
swirl()
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, by = 0.5)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 1-)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
c(0.5, 55, -10, 6)
?c
num_vect(c(0.5, 55, -10, 6))
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sam")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
library("swirl")
ls()
rm(list=ls())
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0 / 0
Inf / Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- [1:20]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
play()
?cbind
?cbind
nxt()
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames) <- c(5, 6)
play()
?colnames
nxt()
colnames(cnames) <- c(4,5)
colnames <- cnames
colnames(my_data) <- cnames
my_data
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
(6 < 7) == TRUE
6 , 7
6 < 7
10 <= 10
5 != 7
5 == 7
!FALSE 5 == 7
!5 == 7
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
play()
?&&
nxt()
TRUE && c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE).
TRUE && c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
help()
info()
skip()
library("swirl")
swirl()
info()
bye()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!5 == 7
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE AND c(TRUE, FALSE, FALSE)
info()
bye()
library(swirl)
ls()
rm(list=ls())
swirl()
bye()
swirl()
Sys.Data()
Sys.Date()
mean(c(2, 4, 5))
submit()
submit()
bye()
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
?submit
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/boring_function.R")
submit()
boring_function('My first function!')
boring_function
submit()
length(my_vector)
submit()
submit()
submit()
submit()
submit()
length(c(1, 2, 3))
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/my_mean.R")
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/my_mean.R")
submit()
skip()
my_mean(c(4, 5, 10))
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/remainder.R")
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/remainder.R")
submit()
play()
nxt()
skip()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
reminder(4, div = 2)
remainder(4, div = 2)
args(remainder)
skip()
evaluate(c(1.4, 3.6, 7.9, 8.8))
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/evaluate-correct.R")
evaluate(sd(c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd c(1.4, 3.6, 7.9, 8.8))
evaluate(sd(1.4, 3.6, 7.9, 8.8))
skip()
evaluate(function(x){x+1}, 6)
evaluate(function(c(8, 4, 0)))
evaluate(function, c(8, 4, 0))
evaluate(function(x){c(8, 4, 0)})
bye()
swirl()
skip()
evaluate(function(x){x[3]}, c(8, 4, 0))
skip()
?paste
paste("Programming", "is", "fun!")
paste("Coding", "is", "tres", "difficile")
info(0)
info()
skip()
args(telegram())
args(telegram("START", "Hello", "STOP"))
?args
telegram(args())
telegram(args("hello"))
skip()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/mad_libs.R")
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/mad_libs.R")
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/mad_libs.R")
submit()
skip()
mad_libs()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/bin_op.R")
submit
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/bin_op.R")
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/bin_op.R")
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/bin_op.R")
submit()
source("C:/Users/Owner/AppData/Local/Temp/Rtmpu2p8xV/bin_op.R")
submit()
skip()
paste('I', "love", 'R')
paste('I' %p% 'love' %p% 'R')
'I' %p% 'love' %p% 'R'
"I" %p% "love" %p% "R"
skip()
swirl()
library("swirl")
rm(list=ls())
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply(list, function)
?sapply(list, function)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_colors, rage)
lapply(flag_colors, range)
lapply(flag_colors, range(circles))
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unqiue_vals <- lapply(flags, unique)
skip()
rm(unqiue_vals)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
head(flags)
dim(flags)
class(flags)
bye()
swirl()
bye()
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head10(plants)
?head
head(plants, n = 10)
tail(plants, n = 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library("swirl")
rm(list=ls())
swirl()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- prob = c(0.3, 0.7)
flips <- prob(c(0.3, 0.7))
flips <- sample(c(0,1))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size, prob)
rbinom(1, size = 100, prob = 0.7)
flips2 <- sample(c(0,1), 100, replace = TRUE, prob = 0.7)
skip()
flips2
sum(heads)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMean(5, 10)
?colMean
?colMeans
cm <- colMeans(5, na.rm = FALSE, dims = 10)
skip()
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
strptime("October 17, 1986 08:24")
t3 <- strptime("October 17, 1986 08:24")
?strptime
skip()
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'das')
difftime(Sys.time(), t1, units = 'days')
data(cars)
cars
data.frame(cars)
?cars
head(cars)
plot(cars)
?plot
plot(speed, dist)
plot(x,y)
?plot
plor(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, title = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
play()
dim(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
swirl()
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
skip()
swirl()
bye()
View(t4)
citation("readxl")
k <- c(3, 4, 5, 6, 7, 8)
k < 4
(sqrt(144) * 3)/(3 + 3)
setwd()
getwd()
setwd("C:/directory/samantha-henry.github.io")
getwd()
build_site.R
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
setwd("C:/directory/samantha-henry.github.io")
rmarkdown::render_site()
